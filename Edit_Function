void edit()
{
	
	// accept the contact that the user wants to edit...
	int ch=0; struct contact *ptr = head; struct contact *prev = head; int k=0;
	int check_int=1;
	if (ptr==0)
	{
		printf ("\nContact List is Empty!\n");
	}
	else
	{
		int choice; int i;
		do
		{
			display();
			printf("Enter the no. preceding the contact you want to edit :\n");
			scanf ("%d", &choice);
			
			if (choice<1 || choice>size)
				printf ("\nChoose the no. from the list!\n\n");
				
		}while (choice<1 || choice>size);
		
		// if ptr is the address for that contact
		
		for (i=1;i<=choice;i++)
		{	
			ptr = ptr->next;
			
			if (i==choice)
				break;
				
			if (ptr!=head)
				prev = prev->next;
		}
		
		// make the necessary changes in the contact as suggested by the user
		int ch=0;
		
		void edit_again()
		{
			do
			{
				
				printf("Press 1 -> Edit name\n");
				printf("Press 2 -> Edit number\n");
				printf("Press 3 -> Edit e-mail\n");
				printf("Press 0 -> Exit\n");
				printf("\n");
				ch=getch();
			
				if (ch!=(48+1) || ch!=(48+2) || ch!=(48+3) || ch!=(48))
					printf ("\nInvalid choice! Try Agian...\n");
				
			}while (ch!=(48+1) || ch!=(48+2) || ch!=(48+3) || ch!=(48));
		
			// then the node before ptr (say prev) ; prev->next=ptr->next; 	
			// ptr is extracted from linked list
				
			if (ch==(48+1))
			{
				struct contact* info = (struct contact*)malloc(sizeof(struct contact));
				
				strcpy(info->phone_no, ptr->phone_no);
				strcpy(info->email, ptr->email);
				
				if (ptr->next == 0)
					prev->next = 0;
					
				else
					prev->next = ptr->next;
					
				free(ptr);
				
				printf ("\nEnter the edited name :\n");
				printf("\nName : ");
				fflush(stdin);
				scanf ("%[^\t\n]s", info->name);
				
				// insertion_sort(ptr);  // passed for insertion into LL by sorting
				insertion_sort(info);
				printf ("\n\nContact Edited!\n\n");
				
			}
			
			else if (ch==(48+2))
			{
				char str[50];
				
				void phone_number()
				{
					printf ("\nEnter the edited phone no. :\n");
					printf ("\nPhone no. : ");
					scanf ("%s", ptr->phone_no);
				
					if(strlen(ptr->phone_no)<10)
					{
						printf("Invalid Phone Number\nTry Again!!\n");
						phone_number();
					}
					strcpy(str,ptr->phone_no);
	
					// to check if phone_no has only digits
	
					for(i=0;i<strlen(str);i++)
					{
						if(str[i]<48 || str[i]>57)
						{
							printf("Invalid Phone Number\nTry Again!!\n"); // means it is not a phone number
							phone_number();
						}
					}
	
					// to check if phone no. is already available or not...
	
					int k=searchByNumber(ptr->phone_no);
					if(k==1)
					{
						printf("Contact Already Available!!\n");
						phone_number();
					}
				}
			}
			
			else if (ch==(48+3))
			{
				printf ("\nEnter the edited E-mail ID:\n");
				printf ("\nE-mail : ");
				scanf ("%s", ptr->email);
			}
			
			else if (ch==(48))
				options();
			
			char ch1;
			do
			{
				printf ("\nDo you want to continue editing this contact ?\nY/N : ");
				scanf ("%c", &ch1);
				
				if (ch1!='Y' || ch1!='y' || ch1!='N' || ch1!='n')
					printf ("\nInvalid choice! Try Again...\n");
				
			}
			while (ch1!='Y' || ch1!='y' || ch1!='N' || ch1!='n');
			
			if (ch1=='Y' || ch1=='y')
				edit_again();
				
			else if (ch1=='N' || ch=='n')
			{
				char ch2;
				do
				{
					printf ("\nDo you want to edit another contact ?\nY/N : ");
					scanf ("%c", &ch2);
				
					if (ch2!='Y' || ch2!='y' || ch2!='N' || ch2!='n')
						printf ("\nInvalid choice! Try Again...\n");
				
				}
				while (ch2!='Y' || ch2!='y' || ch2!='N' || ch2!='n');
				
				if (ch2=='Y' || ch2=='y')
					edit();
					
				else if (ch1=='N' || ch=='n')
					options();
			}	
		}
	}
}
